## 10989

import sys
input=sys.stdin.readline

N = int(input())    # 첫째줄에 수의 개수N

# for문은 스텝이 진행될 때마다 메모리 재할당이 일어난다.
# 결과가 제대로 나와도 속도 저하가 일어나고 메모리를 효율적으로 사용하지 못한다.
# 따라서 최대한 메모리를 효율적으로 사용하도록 한다. 이를 위한 방식으로는 comprehension, map 사용 등이 있다.
# 파이썬은 내부적으로 연산과 메모리를 관리하기 때문에 파이썬에 내장되어 있는 함수들을 적용할수록 메모리를 효율적으로 관리할 수 있다.
# 참고: https://wikidocs.net/21057

num=[0]*10001       # 0으로 가득찬 list 생성 후, 입력받는 수를 index로 하여 해당 index값을 1씩 증가
                    # 인덱스는 0부터 세기 때문에 이를 계산하기 편하게 길이가 10001인 리스트를 만든다.

for i in range(N):
    input_num=int(input())  # 리스트 각 요소마다 0을 할당해놓고 입력값을 받을 때마다 그 입력값과 같은 인덱스에 +1씩 해준다(0을 바꾼다.)
                            # 나중에 입력을 다 받고나면 0보다 큰 요소를 갖는 인덱스들을 찾아 그 수만큼 인덱스를 출력해주면 된다.
    num[input_num] += 1     # 배열에 각 숫자의 개수가 들어가게 된다.

for i in range(10001):      
    if num[i] != 0:
        for j in range(num[i]):
            print(i)        # 숫자의 수만큼 출력해주도록 한다. 배열에 전부 받아 sort를 이용하는 것보다 훨씬 더 빠르다.